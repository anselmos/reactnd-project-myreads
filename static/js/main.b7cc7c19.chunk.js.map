{"version":3,"sources":["BooksAPI.js","BookShelfChanger.js","Book.js","BookShelfComponent.js","ListBooksContent.js","ListBooks.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","BookShelfChanger","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selected","title","value","props","callback","_this2","options","map","element","idx","react_default","a","createElement","key","className","onClick","val","handleChange","target","disabled","React","Component","Book","valueCalled","book","shelf","id","method","objectSpread","Content-Type","body","JSON","stringify","handleBookUpdateCallback","stateBookId","style","width","height","backgroundImage","imageLinks","thumbnail","src_BookShelfChanger","bookId","handleCallback","bind","authors","BookShelfComponent","handleBookCallback","booksRender","src_Book","name","ListBooksContent","src_BookShelfComponent","filter","elt","ListBooks","src_ListBooksContent","handleAddBookCallback","SearchBooks","query","onSearchResultsCallback","handleCloseBookCallback","onChange","onSearchChange","type","placeholder","updateAllBooksState","BooksAPI","currentData","setState","BooksApp","showSearchPage","history","push","_this3","_this4","react_router","path","render","_ref","src_ListBooks","handleAppStateCallbackOnBookUpdate","_ref2","src_SearchBooks","handleOnResultsCallback","ReactDOM","react_router_dom","src_App","document","getElementById","register"],"mappings":"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","file":"static/js/main.b7cc7c19.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\nimport './App.css'\n\nclass BookShelfChanger extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            'selected': 'currentlyReading',\n            'data': [\n                {'title': 'Currently Reading', 'value': 'currentlyReading'},\n                {'title': 'Want to Read', 'value': 'wantToRead'},\n                {'title': 'Read', 'value': 'read'},\n                {'title': 'None', 'value': 'none'},\n            ]\n        }\n    }\n    handleChange(value){\n        this.props.callback(value);\n    }\n    render() {\n        const options = this.state.data.map(function(element, idx)  {\n            return <option key={idx} value={element.value}>{element.title} </option>\n            }\n        )\n        return (\n        <div className=\"book-shelf-changer\">\n        <select\n            onClick={(val) => this.handleChange(val.target.value)}\n        >\n            <option value=\"move\" disabled>Move to...</option>\n            {options}\n        </select>\n        </div>\n        );\n    }\n}\n\nexport default BookShelfChanger","import React from 'react'\nimport './App.css'\nimport * as BooksAPI from './BooksAPI'\nimport BookShelfChanger from \"./BookShelfChanger\";\n\nclass Book extends React.Component {\n    handleCallback(valueCalled){\n        // FIXME check if this is the prefered way to make this happen\n        BooksAPI.update(this.props.data, valueCalled)\n            .then(this.props.handleBookUpdateCallback(this.props.stateBookId, this.props.data.id));\n    }\n    render() {\n        return (\n            <div className=\"book\">\n                <div className=\"book-top\">\n                    <div className=\"book-cover\" style={{\n                        width: 128,\n                        height: 193,\n                        backgroundImage: `url(${ this.props.data.imageLinks.thumbnail })`\n\n                    }}></div>\n                <BookShelfChanger bookId={this.props.data.id} callback={this.handleCallback.bind(this)}/>\n                </div>\n                <div className=\"book-title\">{this.props.data.title}</div>\n                {/* // TODO update authors to a list */}\n                <div className=\"book-authors\">{this.props.data.authors}</div>\n            </div>\n        );\n    }\n}\n\nexport default Book","import React from 'react'\nimport './App.css'\nimport Book from \"./Book\";\nclass BookShelfComponent extends React.Component {\n  render() {\n      // TODO is there any other way to make this callback without variable ?\n    let handleBookCallback = this.props.handleBookUpdateCallback\n    const booksRender = this.props.books.map(function(data, idx) {\n        return (\n            <li key={idx}>\n            <Book stateBookId={idx} data={data} handleBookUpdateCallback={handleBookCallback} />\n            </li>\n        )\n        ;\n    });\n\n    return (\n\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">{this.props.name}</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {booksRender}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookShelfComponent","import React from 'react'\nimport './App.css'\nimport BookShelfComponent from \"./BookShelfComponent\";\n\nclass ListBooksContent extends React.Component {\n\n  render() {\n    return (\n\n      <div className=\"list-books-content\">\n        <div>\n          <BookShelfComponent handleBookUpdateCallback={this.props.handleBookUpdateCallback} name={'Currently Reading'} books={this.props.books.filter(elt => elt.shelf===\"currentlyReading\")} />\n          <BookShelfComponent handleBookUpdateCallback={this.props.handleBookUpdateCallback} name={'Want to Read'} books={this.props.books.filter(elt => elt.shelf===\"wantToRead\")} />\n          <BookShelfComponent handleBookUpdateCallback={this.props.handleBookUpdateCallback} name={'Read'} books={this.props.books.filter(elt => elt.shelf===\"read\")} />\n          <BookShelfComponent handleBookUpdateCallback={this.props.handleBookUpdateCallback} name={'NotInSelf'} books={this.props.books.filter(elt => (typeof(elt.shelf) === 'undefined'))} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListBooksContent","import React from 'react'\nimport './App.css'\nimport ListBooksContent from \"./ListBooksContent\";\n\nclass ListBooks extends React.Component {\n  render() {\n    return (\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n          <ListBooksContent books={this.props.books} handleBookUpdateCallback={this.props.handleBookUpdateCallback} />\n          <div className=\"open-search\">\n            <button onClick={this.props.handleAddBookCallback}>Add a book</button>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default ListBooks","import React from 'react'\nimport './App.css'\n\nclass SearchBooks extends React.Component {\n    onSearchChange(query){\n        this.props.onSearchResultsCallback(query)\n    }\n  render() {\n    return (\n        <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={this.props.handleCloseBookCallback}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input onChange={(val) => this.onSearchChange(val.target.value)} type=\"text\" placeholder=\"Search by title or author\"/>\n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default SearchBooks","import React from 'react'\nimport {Route} from \"react-router-dom\";\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport ListBooks from \"./ListBooks\";\nimport SearchBooks from \"./SearchBooks\";\n\nfunction updateAllBooksState() {\n    BooksAPI.getAll()\n    .then(currentData => {\n        this.setState({'data': currentData})\n    });\n}\n\nclass BooksApp extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n        data: [],\n      showSearchPage: false,\n    }\n  }\n\n  handleAddBookCallback(history){\n      history.push('/search')\n  }\n  handleCloseBookCallback(history){\n      history.push('/')\n      updateAllBooksState.call(this);\n  }\n  handleOnResultsCallback(query){\n    BooksAPI.search(query)\n    .then(currentData => {\n        this.setState({'data': currentData})\n    });\n  }\n  handleAppStateCallbackOnBookUpdate(stateBookId, bookId){\n      updateAllBooksState.call(this);\n      /* This harder approach is not working properly yet\n      // TODO this is wrong and it fails multiple times :(\n      let copyFoo = [ ...this.state.data]; //create a new copy\n      BooksAPI.get(bookId).then(fetchData => {\n          copyFoo[stateBookId] = fetchData;\n          this.setState({data: copyFoo});\n      });\n\n       */\n  }\n  componentDidMount() {\n      updateAllBooksState.call(this);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n          <Route path='/' render={({history}) => (\n               <ListBooks handleAddBookCallback={this.handleAddBookCallback.bind(this, history)} books={this.state.data} handleBookUpdateCallback={this.handleAppStateCallbackOnBookUpdate.bind(this)}/>\n          )}\n            />\n          <Route path=\"/search\" render={({history}) => (\n          <SearchBooks handleCloseBookCallback={this.handleCloseBookCallback.bind(this, history)} onSearchResultsCallback={this.handleOnResultsCallback.bind(this)} books={this.state.data}/>\n          )}\n                 />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport {BrowserRouter} from 'react-router-dom'\nimport {register} from 'register-service-worker'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root')\n);\nregister();\n"],"sourceRoot":""}