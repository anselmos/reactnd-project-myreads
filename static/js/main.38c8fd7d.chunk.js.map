{"version":3,"sources":["api/BooksAPI.js","components/BookShelfChanger.js","components/Book.js","components/BookShelf.js","components/ListBooksContent.js","components/ListBooks.js","components/SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","search","query","method","Object","objectSpread","Content-Type","body","JSON","stringify","BookShelfChanger","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","value","handleChange","bind","assertThisInitialized","event","callback","target","options","map","element","idx","react_default","a","createElement","key","className","defaultValue","onChange","disabled","React","Component","Book","valueCalled","book","shelf","id","handleBookUpdateCallback","thumbnail","undefined","imageLinks","style","width","height","backgroundImage","src_components_BookShelfChanger","bookId","handleCallback","authors","BookShelf","handleBookCallback","booksRender","entries","_ref","_ref2","slicedToArray","src_components_Book","stateBookId","name","ListBooksContent","fromEntries","filter","currentlyReadingBooks","filter_books_dict_by_shelf","wantToReadBooks","readBooks","components_BookShelf","ListBooks","components_ListBooksContent","onClick","handleAddBookCallback","SearchBooks","onSearchResultsCallback","searchBooks","handleCloseBookCallback","val","onSearchChange","type","placeholder","updateAllBooksState","_callee2","allUserBooks","regenerator_default","wrap","_context2","prev","next","BooksAPI","sent","setState","stop","BooksApp","handleOnResultsCallback","history","push","searchData","error","keys","_this2","includes","copyData","bookData","_this3","react_router_dom","react_router","exact","path","render","components_ListBooks","handleAppStateCallbackOnBookUpdate","src_components_SearchBooks","ReactDOM","src_App","document","getElementById","register"],"mappings":"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","file":"static/js/main.38c8fd7d.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React from \"react\";\nimport \"./BookShelfChanger.css\";\n\nclass BookShelfChanger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        { title: \"Currently Reading\", value: \"currentlyReading\" },\n        { title: \"Want to Read\", value: \"wantToRead\" },\n        { title: \"Read\", value: \"read\" },\n        { title: \"None\", value: \"none\" },\n      ],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.props.callback(event.target.value);\n  }\n  render() {\n    const options = this.state.data.map(function (element, idx) {\n      return (\n        <option key={idx} value={element.value}>\n          {element.title}{\" \"}\n        </option>\n      );\n    });\n    return (\n      <div className=\"book-shelf-changer\">\n        <select defaultValue=\"move\" onChange={this.handleChange}>\n          <option value=\"move\" disabled>\n            Move to...\n          </option>\n          {options}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default BookShelfChanger;\n","import React from \"react\";\nimport \"./Book.css\";\nimport * as BooksAPI from \"../api/BooksAPI\";\nimport BookShelfChanger from \"./BookShelfChanger\";\n\nclass Book extends React.Component {\n  async handleCallback(valueCalled) {\n    await BooksAPI.update(this.props.data, valueCalled);\n    this.props.handleBookUpdateCallback(this.props.data.id, valueCalled);\n  }\n  render() {\n    let thumbnail = \"\";\n    if (this.props.data.imageLinks !== undefined) {\n      thumbnail = this.props.data.imageLinks.thumbnail;\n    }\n    return (\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: `url(${thumbnail})`,\n            }}\n          ></div>\n          <BookShelfChanger\n            bookId={this.props.data.id}\n            callback={this.handleCallback.bind(this)}\n          />\n        </div>\n        <div className=\"book-title\">{this.props.data.title}</div>\n        {/* // TODO update authors to a list */}\n        <div className=\"book-authors\">{this.props.data.authors}</div>\n      </div>\n    );\n  }\n}\n\nexport default Book;\n","import React from \"react\";\nimport \"./BookShelf.css\";\nimport Book from \"./Book\";\n\nfunction BookShelf(props){\n    let handleBookCallback = props.handleBookUpdateCallback;\n    const booksRender = Object.entries(props.books).map(function (\n      [bookId, data],\n      idx\n    ) {\n      return (\n        <li key={idx}>\n          <Book\n            stateBookId={idx}\n            data={data}\n            handleBookUpdateCallback={handleBookCallback.bind(this)}\n          />\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">{props.name}</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">{booksRender}</ol>\n        </div>\n      </div>\n    );\n  }\nexport default BookShelf;","import React from \"react\";\nimport \"../App.css\";\nimport BookShelf from \"./BookShelf\";\n\nclass ListBooksContent extends React.Component {\n  filter_books_dict_by_shelf(data, shelf) {\n    return Object.fromEntries(\n      Object.entries(data).filter(([k, v]) => v.shelf === shelf)\n    );\n  }\n  render() {\n    let currentlyReadingBooks = this.filter_books_dict_by_shelf(\n      this.props.books,\n      \"currentlyReading\"\n    );\n    let wantToReadBooks = this.filter_books_dict_by_shelf(\n      this.props.books,\n      \"wantToRead\"\n    );\n    let readBooks = this.filter_books_dict_by_shelf(this.props.books, \"read\");\n    return (\n      <div className=\"list-books-content\">\n        <div>\n          <BookShelf\n            handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(\n              this\n            )}\n            name={\"Currently Reading\"}\n            books={currentlyReadingBooks}\n          />\n          <BookShelf\n            handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(\n              this\n            )}\n            name={\"Want to Read\"}\n            books={wantToReadBooks}\n          />\n          <BookShelf\n            handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(\n              this\n            )}\n            name={\"Read\"}\n            books={readBooks}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListBooksContent;\n","import React from \"react\";\nimport \"../App.css\";\nimport ListBooksContent from \"./ListBooksContent\";\n\nclass ListBooks extends React.Component {\n  render() {\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <ListBooksContent\n          books={this.props.books}\n          handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(\n            this\n          )}\n        />\n        <div className=\"open-search\">\n          <button onClick={this.props.handleAddBookCallback}>Add a book</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListBooks;\n","import React from \"react\";\nimport \"./SearchBooks.css\";\nimport Book from \"./Book\";\n\nclass SearchBooks extends React.Component {\n  onSearchChange(query) {\n    this.props.onSearchResultsCallback(query);\n  }\n  render() {\n    let handleBookCallback = this.props.handleBookUpdateCallback;\n    let searchBooks;\n    if (this.props.searchBooks) {\n      searchBooks = Object.entries(this.props.searchBooks).map(function (\n        [bookId, data],\n        idx\n      ) {\n        return (\n          <li key={idx}>\n            <Book\n              stateBookId={idx}\n              data={data}\n              handleBookUpdateCallback={handleBookCallback.bind(this)}\n            />\n          </li>\n        );\n      });\n    }\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <button\n            className=\"close-search\"\n            onClick={this.props.handleCloseBookCallback}\n          >\n            Close\n          </button>\n          <div className=\"search-books-input-wrapper\">\n            {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n            <input\n              onChange={(val) => this.onSearchChange(val.target.value)}\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">{searchBooks}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBooks;\n","import React from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport * as BooksAPI from \"./api/BooksAPI\";\nimport \"./App.css\";\nimport ListBooks from \"./components/ListBooks\";\nimport SearchBooks from \"./components/SearchBooks\";\n\nasync function updateAllBooksState() {\n  let allUserBooks = await BooksAPI.getAll();\n  let data = {};\n  allUserBooks.map((value) => (data[value.id] = value));\n  this.setState({ data: data });\n}\n\nclass BooksApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n    };\n    this.handleOnResultsCallback = this.handleOnResultsCallback.bind(this);\n  }\n\n  handleAddBookCallback(history) {\n    history.push(\"/search\");\n  }\n  handleCloseBookCallback(history) {\n    history.push(\"/\");\n    updateAllBooksState.call(this);\n  }\n  async handleOnResultsCallback(query) {\n    const searchData = await BooksAPI.search(query);\n\n    let searchBooks = {};\n    if (\n      searchData &&\n      (typeof searchData.error === undefined || !searchData.error)\n    ) {\n      searchData\n        .filter((book) => !Object.keys(this.state.data).includes(book.id))\n        .map((value) => (searchBooks[value.id] = value));\n      this.setState({ searchBooks: searchBooks });\n    } else {\n      this.setState({ searchBooks: {} });\n    }\n  }\n  handleAppStateCallbackOnBookUpdate(bookId, valueCalled) {\n    let copyData = { ...this.state.data };\n    let bookData = { ...this.state.data[bookId] };\n    bookData.shelf = valueCalled;\n    copyData[bookId] = bookData;\n    this.setState({ data: copyData });\n  }\n  componentDidMount() {\n    updateAllBooksState.call(this);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={({ history }) => (\n              <ListBooks\n                handleAddBookCallback={this.handleAddBookCallback.bind(\n                  this,\n                  history\n                )}\n                books={this.state.data}\n                handleBookUpdateCallback={this.handleAppStateCallbackOnBookUpdate.bind(\n                  this\n                )}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/search\"\n            render={({ history }) => (\n              <SearchBooks\n                searchBooks={this.state.searchBooks}\n                handleCloseBookCallback={this.handleCloseBookCallback.bind(\n                  this,\n                  history\n                )}\n                onSearchResultsCallback={this.handleOnResultsCallback}\n                handleBookUpdateCallback={this.handleAppStateCallbackOnBookUpdate.bind(\n                  this\n                )}\n              />\n            )}\n          />\n        </Switch>\n          </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport {register} from 'register-service-worker'\n\nReactDOM.render(\n    <App />\n    , document.getElementById('root')\n);\nregister();\n"],"sourceRoot":""}