{"version":3,"sources":["BooksAPI.js","BookShelfChanger.js","Book.js","BookShelfComponent.js","ListBooksContent.js","ListBooks.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","BookShelfChanger","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","title","handleChange","bind","assertThisInitialized","event","setState","target","callback","options","map","element","idx","react_default","a","createElement","key","className","onChange","disabled","selected","React","Component","Book","valueCalled","book","shelf","id","method","objectSpread","Content-Type","body","JSON","stringify","handleBookUpdateCallback","stateBookId","style","width","height","backgroundImage","imageLinks","thumbnail","src_BookShelfChanger","bookId","handleCallback","authors","BookShelfComponent","handleBookCallback","booksRender","src_Book","name","ListBooksContent","currentlyReadingBooks","filter","elt","wantToReadBooks","readBooks","notInShelfBooks","src_BookShelfComponent","ListBooks","src_ListBooksContent","onClick","handleAddBookCallback","SearchBooks","query","onSearchResultsCallback","handleCloseBookCallback","val","onSearchChange","type","placeholder","updateAllBooksState","BooksAPI","currentData","BooksApp","_this2","showSearchPage","history","push","_this3","_this4","react_router","path","render","_ref","src_ListBooks","handleAppStateCallbackOnBookUpdate","_ref2","src_SearchBooks","handleOnResultsCallback","ReactDOM","react_router_dom","src_App","document","getElementById","register"],"mappings":"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","file":"static/js/main.6fe2497e.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\nimport './App.css'\n\nclass BookShelfChanger extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null,\n            data : [\n                {'title': 'Currently Reading', 'value': 'currentlyReading'},\n                {'title': 'Want to Read', 'value': 'wantToRead'},\n                {'title': 'Read', 'value': 'read'},\n                {'title': 'None', 'value': 'none'},\n            ],\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.setState({value: event.target.value});\n        this.props.callback(event.target.value);\n    }\n    render() {\n        const options = this.state.data.map(function(element, idx)  {\n            return <option key={idx} value={element.value}>{element.title} </option>\n            }\n        )\n        // I wanted to use defaltValue in option but it is strangely not working\n        return (\n        <div className=\"book-shelf-changer\">\n        <select\n            value={null}\n            onChange={this.handleChange}\n        >\n            <option value=\"move\" disabled selected>Move to...</option>\n            {options}\n        </select>\n        </div>\n        );\n    }\n}\n\nexport default BookShelfChanger","import React from 'react'\nimport './App.css'\nimport * as BooksAPI from './BooksAPI'\nimport BookShelfChanger from \"./BookShelfChanger\";\n\nclass Book extends React.Component {\n    handleCallback(valueCalled){\n        BooksAPI.update(this.props.data, valueCalled)\n            .then(this.props.handleBookUpdateCallback(this.props.stateBookId, this.props.data.id));\n    }\n    render() {\n        return (\n            <div className=\"book\">\n                <div className=\"book-top\">\n                    <div className=\"book-cover\" style={{\n                        width: 128,\n                        height: 193,\n                        backgroundImage: `url(${ this.props.data.imageLinks.thumbnail })`\n\n                    }}></div>\n                <BookShelfChanger bookId={this.props.data.id} callback={this.handleCallback.bind(this)}/>\n                </div>\n                <div className=\"book-title\">{this.props.data.title}</div>\n                {/* // TODO update authors to a list */}\n                <div className=\"book-authors\">{this.props.data.authors}</div>\n            </div>\n        );\n    }\n}\n\nexport default Book","import React from 'react'\nimport './App.css'\nimport Book from \"./Book\";\nclass BookShelfComponent extends React.Component {\n  render() {\n      // TODO is there any other way to make this callback without variable ?\n    let handleBookCallback = this.props.handleBookUpdateCallback\n    const booksRender = this.props.books.map(function(data, idx) {\n        return (\n            <li key={idx}>\n            <Book stateBookId={idx} data={data} handleBookUpdateCallback={handleBookCallback.bind(this)} />\n            </li>\n        )\n        ;\n    });\n\n    return (\n\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">{this.props.name}</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {booksRender}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookShelfComponent","import React from 'react'\nimport './App.css'\nimport BookShelfComponent from \"./BookShelfComponent\";\n\nclass ListBooksContent extends React.Component {\n\n  render() {\n    let currentlyReadingBooks = this.props.books.filter(elt => elt.shelf===\"currentlyReading\");\n    let wantToReadBooks = this.props.books.filter(elt => elt.shelf===\"wantToRead\");\n    let readBooks = this.props.books.filter(elt => elt.shelf===\"read\");\n    let notInShelfBooks = this.props.books.filter(elt => (typeof(elt.shelf) === 'undefined'));\n    return (\n\n      <div className=\"list-books-content\">\n        <div>\n          <BookShelfComponent handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(this)} name={'Currently Reading'} books={currentlyReadingBooks} />\n          <BookShelfComponent handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(this)} name={'Want to Read'} books={wantToReadBooks} />\n          <BookShelfComponent handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(this)} name={'Read'} books={readBooks} />\n          <BookShelfComponent handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(this)} name={'NotInSelf'} books={notInShelfBooks} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListBooksContent","import React from 'react'\nimport './App.css'\nimport ListBooksContent from \"./ListBooksContent\";\n\nclass ListBooks extends React.Component {\n  render() {\n    return (\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n          <ListBooksContent books={this.props.books} handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(this)} />\n          <div className=\"open-search\">\n            <button onClick={this.props.handleAddBookCallback}>Add a book</button>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default ListBooks","import React from 'react'\nimport './App.css'\n\nclass SearchBooks extends React.Component {\n    onSearchChange(query){\n        this.props.onSearchResultsCallback(query)\n    }\n  render() {\n    return (\n        <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={this.props.handleCloseBookCallback}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input onChange={(val) => this.onSearchChange(val.target.value)} type=\"text\" placeholder=\"Search by title or author\"/>\n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default SearchBooks","import React from 'react'\nimport {Route} from \"react-router-dom\";\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport ListBooks from \"./ListBooks\";\nimport SearchBooks from \"./SearchBooks\";\n\nfunction updateAllBooksState() {\n    BooksAPI.getAll()\n    .then(currentData => {\n        this.setState({'data': currentData});\n    });\n}\n\nclass BooksApp extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n        data: [],\n      showSearchPage: false,\n    }\n  }\n\n  handleAddBookCallback(history){\n      history.push('/search')\n  }\n  handleCloseBookCallback(history){\n      history.push('/')\n      updateAllBooksState.call(this);\n  }\n  handleOnResultsCallback(query){\n    BooksAPI.search(query)\n    .then(currentData => {\n        this.setState({'data': currentData})\n    });\n  }\n  handleAppStateCallbackOnBookUpdate(stateBookId, bookId){\n      updateAllBooksState.call(this);\n      /* This harder approach is not working properly yet\n      // TODO this is wrong and it fails multiple times :(\n      let copyFoo = [ ...this.state.data]; //create a new copy\n      BooksAPI.get(bookId).then(fetchData => {\n          copyFoo[stateBookId] = fetchData;\n          this.setState({data: copyFoo});\n      });\n\n       */\n  }\n  componentDidMount() {\n      updateAllBooksState.call(this);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n          <Route path='/' render={({history}) => (\n               <ListBooks handleAddBookCallback={this.handleAddBookCallback.bind(this, history)} books={this.state.data} handleBookUpdateCallback={this.handleAppStateCallbackOnBookUpdate.bind(this)}/>\n          )}\n            />\n          <Route path=\"/search\" render={({history}) => (\n          <SearchBooks handleCloseBookCallback={this.handleCloseBookCallback.bind(this, history)} onSearchResultsCallback={this.handleOnResultsCallback.bind(this)} books={this.state.data}/>\n          )}\n                 />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport {BrowserRouter} from 'react-router-dom'\nimport {register} from 'register-service-worker'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root')\n);\nregister();\n"],"sourceRoot":""}