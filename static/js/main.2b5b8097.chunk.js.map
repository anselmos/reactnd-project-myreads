{"version":3,"sources":["BooksAPI.js","BookShelfChanger.js","Book.js","BookShelfComponent.js","ListBooksContent.js","ListBooks.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","BookShelfChanger","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","value","handleChange","bind","assertThisInitialized","event","callback","target","options","map","element","idx","react_default","a","createElement","key","className","defaultValue","onChange","disabled","React","Component","Book","valueCalled","book","shelf","id","method","objectSpread","Content-Type","body","JSON","stringify","handleBookUpdateCallback","thumbnail","undefined","imageLinks","style","width","height","backgroundImage","src_BookShelfChanger","bookId","handleCallback","authors","BookShelfComponent","handleBookCallback","booksRender","entries","_ref","_ref2","slicedToArray","src_Book","stateBookId","name","ListBooksContent","fromEntries","filter","currentlyReadingBooks","filter_books_dict_by_shelf","wantToReadBooks","readBooks","src_BookShelfComponent","ListBooks","src_ListBooksContent","onClick","handleAddBookCallback","SearchBooks","query","onSearchResultsCallback","searchBooks","handleCloseBookCallback","val","onSearchChange","type","placeholder","updateAllBooksState","BooksAPI","allUserBooks","setState","BooksApp","_this2","handleOnResultsCallback","history","push","_this3","searchData","error","keys","includes","catch","copyData","bookData","_this4","react_router","exact","path","render","src_ListBooks","handleAppStateCallbackOnBookUpdate","src_SearchBooks","ReactDOM","react_router_dom","src_App","document","getElementById","register"],"mappings":"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","file":"static/js/main.2b5b8097.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React from \"react\";\nimport \"./App.css\";\n\nclass BookShelfChanger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        { title: \"Currently Reading\", value: \"currentlyReading\" },\n        { title: \"Want to Read\", value: \"wantToRead\" },\n        { title: \"Read\", value: \"read\" },\n        { title: \"None\", value: \"none\" },\n      ],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.props.callback(event.target.value);\n  }\n  render() {\n    const options = this.state.data.map(function (element, idx) {\n      return (\n        <option key={idx} value={element.value}>\n          {element.title}{\" \"}\n        </option>\n      );\n    });\n    return (\n      <div className=\"book-shelf-changer\">\n        <select defaultValue=\"move\" onChange={this.handleChange}>\n          <option value=\"move\" disabled>\n            Move to...\n          </option>\n          {options}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default BookShelfChanger;\n","import React from \"react\";\nimport \"./App.css\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport BookShelfChanger from \"./BookShelfChanger\";\n\nclass Book extends React.Component {\n  handleCallback(valueCalled) {\n    BooksAPI.update(this.props.data, valueCalled).then(\n      this.props.handleBookUpdateCallback(this.props.data.id, valueCalled)\n    );\n  }\n  render() {\n    let thumbnail = \"\";\n    if (this.props.data.imageLinks !== undefined) {\n      thumbnail = this.props.data.imageLinks.thumbnail;\n    }\n    return (\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: `url(${thumbnail})`,\n            }}\n          ></div>\n          <BookShelfChanger\n            bookId={this.props.data.id}\n            callback={this.handleCallback.bind(this)}\n          />\n        </div>\n        <div className=\"book-title\">{this.props.data.title}</div>\n        {/* // TODO update authors to a list */}\n        <div className=\"book-authors\">{this.props.data.authors}</div>\n      </div>\n    );\n  }\n}\n\nexport default Book;\n","import React from \"react\";\nimport \"./App.css\";\nimport Book from \"./Book\";\n// TODO move to function component.\nclass BookShelfComponent extends React.Component {\n  render() {\n    let handleBookCallback = this.props.handleBookUpdateCallback;\n    const booksRender = Object.entries(this.props.books).map(function (\n      [bookId, data],\n      idx\n    ) {\n      return (\n        <li key={idx}>\n          <Book\n            stateBookId={idx}\n            data={data}\n            handleBookUpdateCallback={handleBookCallback.bind(this)}\n          />\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">{this.props.name}</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">{booksRender}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookShelfComponent;\n","import React from \"react\";\nimport \"./App.css\";\nimport BookShelfComponent from \"./BookShelfComponent\";\n\nclass ListBooksContent extends React.Component {\n  filter_books_dict_by_shelf(data, shelf) {\n    return Object.fromEntries(\n      Object.entries(data).filter(([k, v]) => v.shelf === shelf)\n    );\n  }\n  render() {\n    let currentlyReadingBooks = this.filter_books_dict_by_shelf(\n      this.props.books,\n      \"currentlyReading\"\n    );\n    let wantToReadBooks = this.filter_books_dict_by_shelf(\n      this.props.books,\n      \"wantToRead\"\n    );\n    let readBooks = this.filter_books_dict_by_shelf(this.props.books, \"read\");\n    return (\n      <div className=\"list-books-content\">\n        <div>\n          <BookShelfComponent\n            handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(\n              this\n            )}\n            name={\"Currently Reading\"}\n            books={currentlyReadingBooks}\n          />\n          <BookShelfComponent\n            handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(\n              this\n            )}\n            name={\"Want to Read\"}\n            books={wantToReadBooks}\n          />\n          <BookShelfComponent\n            handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(\n              this\n            )}\n            name={\"Read\"}\n            books={readBooks}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListBooksContent;\n","import React from \"react\";\nimport \"./App.css\";\nimport ListBooksContent from \"./ListBooksContent\";\n\nclass ListBooks extends React.Component {\n  render() {\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <ListBooksContent\n          books={this.props.books}\n          handleBookUpdateCallback={this.props.handleBookUpdateCallback.bind(\n            this\n          )}\n        />\n        <div className=\"open-search\">\n          <button onClick={this.props.handleAddBookCallback}>Add a book</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListBooks;\n","import React from \"react\";\nimport \"./App.css\";\nimport Book from \"./Book\";\n\nclass SearchBooks extends React.Component {\n  onSearchChange(query) {\n    this.props.onSearchResultsCallback(query);\n  }\n  render() {\n    let handleBookCallback = this.props.handleBookUpdateCallback;\n    let searchBooks;\n    if (this.props.searchBooks) {\n      searchBooks = Object.entries(this.props.searchBooks).map(function (\n        [bookId, data],\n        idx\n      ) {\n        return (\n          <li key={idx}>\n            <Book\n              stateBookId={idx}\n              data={data}\n              handleBookUpdateCallback={handleBookCallback.bind(this)}\n            />\n          </li>\n        );\n      });\n    }\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <button\n            className=\"close-search\"\n            onClick={this.props.handleCloseBookCallback}\n          >\n            Close\n          </button>\n          <div className=\"search-books-input-wrapper\">\n            {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n            <input\n              onChange={(val) => this.onSearchChange(val.target.value)}\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">{searchBooks}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBooks;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport \"./App.css\";\nimport ListBooks from \"./ListBooks\";\nimport SearchBooks from \"./SearchBooks\";\n\nfunction updateAllBooksState() {\n  BooksAPI.getAll().then((allUserBooks) => {\n    let data = {};\n    allUserBooks.map((value) => (data[value.id] = value));\n    this.setState({ data: data });\n  });\n}\n\nclass BooksApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n    };\n    this.handleOnResultsCallback = this.handleOnResultsCallback.bind(this);\n  }\n\n  handleAddBookCallback(history) {\n    history.push(\"/search\");\n  }\n  handleCloseBookCallback(history) {\n    history.push(\"/\");\n    updateAllBooksState.call(this);\n  }\n  handleOnResultsCallback(query) {\n    BooksAPI.search(query)\n      .then(\n        (searchData) => {\n          let searchBooks = {};\n          if (searchData.error === undefined || !searchData.error) {\n            searchData\n              .filter((book) => !Object.keys(this.state.data).includes(book.id))\n              .map((value) => (searchBooks[value.id] = value));\n            this.setState({ searchBooks: searchBooks });\n          }\n        },\n        (error) => {}\n      )\n      .catch((error) => {\n        this.setState({ searchBooks: {} });\n      });\n  }\n  handleAppStateCallbackOnBookUpdate(bookId, valueCalled) {\n    let copyData = { ...this.state.data };\n    let bookData = { ...this.state.data[bookId] };\n    bookData.shelf = valueCalled;\n    copyData[bookId] = bookData;\n    this.setState({ data: copyData });\n  }\n  componentDidMount() {\n    updateAllBooksState.call(this);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={({ history }) => (\n              <ListBooks\n                handleAddBookCallback={this.handleAddBookCallback.bind(\n                  this,\n                  history\n                )}\n                books={this.state.data}\n                handleBookUpdateCallback={this.handleAppStateCallbackOnBookUpdate.bind(\n                  this\n                )}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/search\"\n            render={({ history }) => (\n              <SearchBooks\n                searchBooks={this.state.searchBooks}\n                handleCloseBookCallback={this.handleCloseBookCallback.bind(\n                  this,\n                  history\n                )}\n                onSearchResultsCallback={this.handleOnResultsCallback}\n                handleBookUpdateCallback={this.handleAppStateCallbackOnBookUpdate.bind(\n                  this\n                )}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { register } from \"register-service-worker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregister();\n"],"sourceRoot":""}